/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/assets/js/main.js":
/*!*******************************!*\
  !*** ./src/assets/js/main.js ***!
  \*******************************/
/***/ (function() {

eval("document.addEventListener('DOMContentLoaded', () => {\n  const header = document.querySelector('header');\n  const toggleHeader = () => header.classList.toggle('header-show', window.scrollY > 80);\n  const nf = new Intl.NumberFormat('ru-RU');\n  const toNum = v => (typeof v === 'number' ? v : +(String(v).replace(/[^\\d.-]/g, '') || 0));\n\n  const burger = document.querySelector('.header__burger');\n  const mobileMenu = document.querySelector('.mobile-menu');\n\n  burger.addEventListener('click', function (e) {\n    mobileMenu.classList.toggle('show');\n    burger.classList.toggle('show');\n  });\n\n  toggleHeader();\n  initFormSliders();\n\n  document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n    anchor.addEventListener('click', function (e) {\n      const targetID = this.getAttribute('href');\n\n      if (targetID.length > 1) {\n        const targetEl = document.querySelector(targetID);\n\n        if (targetEl) {\n          e.preventDefault();\n\n          // Добавляем scroll-margin-top к целевому элементу\n          targetEl.style.scrollMarginTop = '100px';\n\n          targetEl.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start',\n          });\n        }\n      }\n    });\n  });\n\n  window.addEventListener('scroll', toggleHeader);\n\n  function initFormSliders(root = document) {\n    root.querySelectorAll('.form__slider').forEach(box => {\n      const sliderEl = box.querySelector('._slider');\n      if (!sliderEl || sliderEl.noUiSlider) return;\n\n      const valueEl = box.querySelector('._value');\n\n      const min = toNum(box.dataset.min ?? 1000);\n      const max = toNum(box.dataset.max ?? 100000);\n      const step = toNum(box.dataset.step ?? 100);\n      const start = toNum(box.dataset.start ?? min);\n      const suffix = box.dataset.suffix ?? ' ₽';\n\n      noUiSlider.create(sliderEl, {\n        start,\n        step,\n        range: { min, max },\n        connect: [true, false],\n        tooltips: false,\n        format: { to: v => v, from: v => v },\n      });\n\n      const render = v => {\n        if (valueEl) valueEl.textContent = nf.format(Math.round(v)) + suffix;\n      };\n      sliderEl.noUiSlider.on('update', (values, handle) => render(values[handle]));\n      render(start);\n    });\n  }\n\n  new Swiper('.home-slider', {\n    slidesPerView: 'auto',\n    spaceBetween: 20,\n    loop: true,\n    grabCursor: true,\n    speed: 600,\n    autoplay: {\n      delay: 2500,\n      disableOnInteraction: false,\n      pauseOnMouseEnter: true,\n    },\n    breakpoints: {\n      640: { spaceBetween: 14 },\n      1024: { spaceBetween: 16 },\n    },\n  });\n\n  new Swiper('.reviews__slider', {\n    slidesPerView: 1.2,\n    spaceBetween: 16,\n    speed: 500,\n    loop: true,\n    autoplay: {\n      delay: 2500,\n    },\n    navigation: {\n      prevEl: '.reviews__btn-prev',\n      nextEl: '.reviews__btn-next',\n    },\n    pagination: {\n      el: '.reviews__pagination',\n      clickable: true,\n    },\n    breakpoints: {\n      768: { slidesPerView: 2.3, spaceBetween: 20 },\n      1200: { slidesPerView: 3, spaceBetween: 20 },\n    },\n  });\n\n  document.querySelectorAll('input[type=\"tel\"]').forEach(input => {\n    if (input) {\n      new PhoneInputFormatter(input);\n    }\n  });\n  document.querySelectorAll('.accordion-header').forEach(header => new Accordion(header));\n\n  const popupTriggers = document.querySelectorAll('[data-popup]');\n  const closeButtonsPopup = document.querySelectorAll('.popup__close, .popup-close');\n\n  function closePopup() {\n    document.querySelectorAll('.popup.show').forEach(popup => {\n      popup.classList.remove('show');\n    });\n  }\n\n  popupTriggers.forEach(popupTrigger => {\n    popupTrigger.addEventListener('click', function (event) {\n      event.preventDefault();\n\n      const popupId = popupTrigger.getAttribute('data-popup');\n      const popupElement = document.querySelector(popupId);\n\n      if (!popupElement) {\n        console.error(`Popup с id ${popupId} не найден.`);\n        return;\n      }\n\n      closePopup(); // Закрываем все попапы перед открытием нового\n      popupElement.classList.add('show');\n    });\n  });\n\n  closeButtonsPopup.forEach(closeButton => {\n    closeButton.addEventListener('click', function (event) {\n      event.preventDefault();\n      closePopup();\n    });\n  });\n\n  document.addEventListener('keydown', function (event) {\n    if (event.key === 'Escape') {\n      closePopup();\n    }\n  });\n\n  document.addEventListener('click', function (event) {\n    if (event.target.classList.contains('popup')) {\n      closePopup();\n    }\n  });\n});\n\n/* Slide Toggle */\nlet _slideUp = (target, duration = 500, displayCSS = 'block') => {\n  target.style.transitionProperty = 'height, margin, padding';\n  target.style.transitionDuration = duration + 'ms';\n  target.style.height = target.offsetHeight + 'px';\n  target.offsetHeight;\n  target.style.overflow = 'hidden';\n  target.style.height = 0;\n  target.style.paddingTop = 0;\n  target.style.paddingBottom = 0;\n  target.style.marginTop = 0;\n  target.style.marginBottom = 0;\n  window.setTimeout(() => {\n    target.style.display = 'none';\n    target.style.removeProperty('height');\n    target.style.removeProperty('padding-top');\n    target.style.removeProperty('padding-bottom');\n    target.style.removeProperty('margin-top');\n    target.style.removeProperty('margin-bottom');\n    target.style.removeProperty('overflow');\n    target.style.removeProperty('transition-duration');\n    target.style.removeProperty('transition-property');\n    target.classList.remove('_slide');\n  }, duration);\n};\n\nlet _slideDown = (target, duration = 500, displayCSS = 'block') => {\n  target.style.removeProperty('display');\n  let display = window.getComputedStyle(target).display;\n  if (display === 'none') display = displayCSS;\n  target.style.display = display;\n  let height = target.offsetHeight;\n  target.style.overflow = 'hidden';\n  target.style.height = 0;\n  target.style.paddingTop = 0;\n  target.style.paddingBottom = 0;\n  target.style.marginTop = 0;\n  target.style.marginBottom = 0;\n  target.offsetHeight;\n  target.style.transitionProperty = 'height, margin, padding';\n  target.style.transitionDuration = duration + 'ms';\n  target.style.height = height + 'px';\n  target.style.removeProperty('padding-top');\n  target.style.removeProperty('padding-bottom');\n  target.style.removeProperty('margin-top');\n  target.style.removeProperty('margin-bottom');\n  window.setTimeout(() => {\n    target.style.removeProperty('height');\n    target.style.removeProperty('overflow');\n    target.style.removeProperty('transition-duration');\n    target.style.removeProperty('transition-property');\n    target.classList.remove('_slide');\n  }, duration);\n};\n\nlet _slideToggle = (target, duration = 500, displayCSS = 'block') => {\n  if (!target.classList.contains('_slide')) {\n    target.classList.add('_slide');\n    if (window.getComputedStyle(target).display === 'none') {\n      return _slideDown(target, duration, displayCSS);\n    } else {\n      return _slideUp(target, duration, displayCSS);\n    }\n  }\n};\n\nclass PhoneInputFormatter {\n  constructor(input) {\n    this.input = input;\n    this.initEvents();\n  }\n\n  getInputNumbersValue() {\n    return this.input.value ? this.input.value.replace(/\\D/g, '') : '';\n  }\n\n  onPhonePaste(e) {\n    const inputNumbersValue = this.getInputNumbersValue();\n    const pasted = e.clipboardData || window.clipboardData;\n    if (pasted) {\n      const pastedText = pasted.getData('Text');\n      if (/\\D/g.test(pastedText)) {\n        this.input.value = inputNumbersValue;\n      }\n    }\n  }\n\n  onPhoneInput(e) {\n    let inputNumbersValue = this.getInputNumbersValue(),\n      selectionStart = this.input.selectionStart,\n      formattedInputValue = '';\n\n    if (!inputNumbersValue) {\n      return (this.input.value = '');\n    }\n\n    if (this.input.value.length !== selectionStart) {\n      if (e.data && /\\D/g.test(e.data)) {\n        this.input.value = inputNumbersValue;\n      }\n      return;\n    }\n\n    if (['7', '8', '9'].includes(inputNumbersValue[0])) {\n      if (inputNumbersValue[0] === '9') inputNumbersValue = '7' + inputNumbersValue;\n      const firstSymbols = inputNumbersValue[0] === '8' ? '8' : '+7';\n      formattedInputValue = firstSymbols + ' ';\n      if (inputNumbersValue.length > 1) {\n        formattedInputValue += '(' + inputNumbersValue.substring(1, 4);\n      }\n      if (inputNumbersValue.length >= 5) {\n        formattedInputValue += ') ' + inputNumbersValue.substring(4, 7);\n      }\n      if (inputNumbersValue.length >= 8) {\n        formattedInputValue += '-' + inputNumbersValue.substring(7, 9);\n      }\n      if (inputNumbersValue.length >= 10) {\n        formattedInputValue += '-' + inputNumbersValue.substring(9, 11);\n      }\n    } else {\n      formattedInputValue = '+' + inputNumbersValue.substring(0, 16);\n    }\n    this.input.value = formattedInputValue;\n  }\n\n  onPhoneKeyDown(e) {\n    const inputValue = this.input.value.replace(/\\D/g, '');\n    if (e.keyCode === 8 && inputValue.length === 1) {\n      this.input.value = '';\n    }\n  }\n\n  initEvents() {\n    this.input.addEventListener('keydown', e => this.onPhoneKeyDown(e));\n    this.input.addEventListener('input', e => this.onPhoneInput(e), false);\n    this.input.addEventListener('paste', e => this.onPhonePaste(e), false);\n  }\n}\n\nclass Accordion {\n  constructor(header) {\n    this.header = header;\n    this.accordionItem = header.closest('.accordion-item');\n    this.accordionBody = this.accordionItem.querySelector('.accordion-body');\n    this.button = this.accordionItem.querySelector('.accordion-buttom');\n\n    if (!this.accordionItem.classList.contains('active')) {\n      this.accordionBody.style.display = 'none';\n    }\n\n    this.initEvent();\n  }\n\n  toggleAccordion() {\n    const isActive = this.accordionItem.classList.toggle('active');\n    _slideToggle(this.accordionBody, 300);\n    Accordion.closeOthers(this.accordionItem);\n  }\n\n  static closeOthers(currentItem) {\n    document.querySelectorAll('.accordion-item').forEach(otherItem => {\n      if (otherItem !== currentItem) {\n        otherItem.classList.remove('active');\n        const otherBody = otherItem.querySelector('.accordion-body');\n        _slideUp(otherBody, 300);\n      }\n    });\n  }\n\n  initEvent() {\n    if (this.button) {\n      this.button.addEventListener('click', () => this.toggleAccordion());\n    }\n    if (this.header) {\n      this.header.addEventListener('click', () => this.toggleAccordion());\n    }\n  }\n}\n\n\n//# sourceURL=webpack://gulp-starter/./src/assets/js/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/assets/js/main.js"]();
/******/ 	
/******/ })()
;